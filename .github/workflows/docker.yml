name: Build and push Docker images

permissions:
  contents: write
  packages: write

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: backend
            context: .
            dockerfile: ./Dockerfile
            image: endolla-watcher-backend
          - name: frontend
            context: ./frontend
            dockerfile: ./frontend/Dockerfile
            image: endolla-watcher-frontend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push ${{ matrix.name }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}:${{ github.sha }}

  update-manifests:
    name: Update Argo CD image tags
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Update image tags
        run: |
          python3 scripts/update_kustomize_image.py deploy/kustomization.yaml ghcr.io/${{ github.repository_owner }}/endolla-watcher-frontend ${{ github.sha }}
          python3 scripts/update_kustomize_image.py deploy/kustomization.yaml ghcr.io/${{ github.repository_owner }}/endolla-watcher-backend ${{ github.sha }}
      - name: Commit and push changes
        run: |
          if git diff --quiet; then
            echo "No manifest changes to commit"
            exit 0
          fi
          git commit -am "chore: update Argo CD image tags [skip ci]"
          git push

